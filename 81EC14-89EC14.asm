.ORG 00000H
	MVI A, 010000000B ; 8255 INITIALISATION A,B as output Ports
	OUT 003H
	LXI SP,00000H ; INITIALIZE STACK POINTER
INITIAL:  	MVI A, 000110000B ; 30H sent to check the necessary Power On conditions 
	MOV B, A
	CALL OUTPUT
	CALL CMDOUT
	CALL CMDOUT
	MVI A, 000111000B ; Code 38H 8 BIT, 2 LINES, 5X7 DISP
	CALL CMDOUT
	MVI A, 000001000B ;DISPLAY OFF
	CALL CMDOUT
	MVI A, 000000001B ;CLEAR DISPLAY 01H
	CALL CMDOUT
	MVI A, 000000110B ;ENTRY MODE SET, SHIFT AND INCREMENT CURSOR 06H
	CALL CMDOUT
	MVI A, 000001100B ;DISPLAY ON CURSOR, BLINKING OFF 0CH
	CALL CMDOUT
STARTUP: MVI A, 080H  ; Setting DDRAM to address 80h that is first line 
	CALL CMDOUT
	MVI A, 050H ; "PASSWORD SECURED PIGGY BANK"
	CALL DTAOUT
	MVI A, 061H ; a
	CALL DTAOUT
	MVI A, 073H ; s
	CALL DTAOUT
	MVI A, 073H ; s
	CALL DTAOUT
	MVI A, 077H ; w
	CALL DTAOUT
	MVI A, 06FH ; o
	CALL DTAOUT
	MVI A, 072H ; r
	CALL DTAOUT
	MVI A, 064H ; d
	CALL DTAOUT
	MVI A, 020H ; space
	CALL DTAOUT
	MVI A, 053H; S
	CALL DTAOUT
	MVI A, 065H ; e
	CALL DTAOUT
	MVI A, 063H; c
	CALL DTAOUT
	MVI A, 075H; u
	CALL DTAOUT
	MVI A, 072H ; r
	CALL DTAOUT
	MVI A, 065H ; e
	CALL DTAOUT
	MVI A, 064H ; d
	CALL DTAOUT
	MVI A, 0C2H; 3RD SPACE SECOND LINE LCD
	CALL CMDOUT
	MVI A, 050H ; p
	CALL DTAOUT
	MVI A, 069H ; i
	CALL DTAOUT
	MVI A, 067H ; g
	CALL DTAOUT
	MVI A, 067H ; g
	CALL DTAOUT
	MVI A, 079H ; y
	CALL DTAOUT
	MVI A, 020H ; SPACE
	CALL DTAOUT
	MVI A, 042H ; B
	CALL DTAOUT
	MVI A, 061H ; a
	CALL DTAOUT
	MVI A, 06EH ; n
	CALL DTAOUT
	MVI A, 06BH ; k
	CALL DTAOUT
	CALL ONESEC
	CALL ONESEC
	MVI A, 000000001B ;CLEAR DISPLAY 01H
	CALL CMDOUT
	CALL ONESEC
MASTER: MVI A, 080H  ; Setting DDRAM to address 80h that is first line 
	CALL CMDOUT
	MVI A, 04DH  ; Writing "MASTER password: "
	CALL DTAOUT
	MVI A, 061H ; a
	 CALL DTAOUT
	MVI A, 073H ; s
	CALL DTAOUT
	MVI A, 074H ; t
	CALL DTAOUT
	MVI A, 065H ; e
	CALL DTAOUT
	MVI A, 072H ; r
	CALL DTAOUT
	MVI A, 020H ; space
	CALL DTAOUT
	MVI A, 050H ; P
	CALL DTAOUT
	MVI A, 061H ; a
	CALL DTAOUT
	MVI A, 073H ; s
	CALL DTAOUT
	MVI A, 073H ; s
	CALL DTAOUT
	MVI A, 077H ; w
	CALL DTAOUT
	MVI A, 06FH ; o
	CALL DTAOUT
	MVI A, 072H ; r
	CALL DTAOUT
	MVI A, 064H ; d
	CALL DTAOUT
	MVI A, 03AH ; :
	CALL DTAOUT
	MVI A, 0C6H
	CALL CMDOUT
MASPAS:	LXI H, 00F00H ; POINT TO MEMORY LOCATION IN ROM
	MVI C, 004H ; COUNT FOR NUMBER OF DIGITS IN PASSWORD
	MVI B, 000H ; FLAG
MASLOOP:  	CALL KYBORD
	PUSH PSW
	PUSH B
	CALL NUMTOLCD
	CALL DTAOUT
	POP B
	POP PSW
	CMP M
	JZ MASTHIS
	INR B
MASTHIS: INX H
	DCR C
	JNZ MASLOOP
	CALL ONESEC
	MVI A, 000000001B ;CLEAR DISPLAY 01H
	PUSH B	
	CALL CMDOUT
	POP B
	MOV A, B ; VALUE OF FLAG
	CPI 000H
	JZ SCREEN1; MAIN PROGRAM IF CORRECT MASPAS
	JMP MASTER; INFINTE TILL CORRECT

SCREEN1:	MVI A, 000000001B ; CLEAR DISPLAY
	CALL CMDOUT
	MVI A, 000000110B ; ENTRY MODE SET, SHIFT AND INCREMENT REGISTER
	CALL CMDOUT
	MVI A, 000001100B ; DISPLAY ON CURSOR
        	CALL CMDOUT
	MVI A, 080H ; SETTING DDRAM ADDRESS TO FIRST LINE
	CALL CMDOUT
	MVI A, 031H ; DISPLAY "1-Enter Password"
	CALL DTAOUT
	MVI A, 02DH ; -
	CALL DTAOUT
	MVI A, 045H ; E
	CALL DTAOUT
	MVI A, 06EH ; n
	 CALL DTAOUT
	MVI A, 074H ; t
	CALL DTAOUT
	MVI A, 065H ; e
	CALL DTAOUT
	MVI A, 072H ; r
	CALL DTAOUT
	MVI A, 020H ; space
	CALL DTAOUT
	MVI A, 050H ; p
	CALL DTAOUT
	MVI A, 061H ; a
	CALL DTAOUT
	MVI A, 073H ; s
	CALL DTAOUT
	MVI A, 073H ; s
	CALL DTAOUT
	MVI A, 077H ; w
	CALL DTAOUT
	MVI A, 06FH ; o
	CALL DTAOUT
	MVI A, 072H ; r
	CALL DTAOUT
	MVI A, 064H ; d
	CALL DTAOUT
	MVI A, 03AH ; :
	CALL DTAOUT
	MVI A, 0C0H
	CALL CMDOUT
	MVI A, 032H ; DISPLAY "2-Forgot?"
	CALL DTAOUT
	MVI A, 02DH ; - 
	CALL DTAOUT
	MVI A, 046H ; F
	CALL DTAOUT	
	MVI A, 06FH ; o
	CALL DTAOUT
	MVI A, 072H ; r
	CALL DTAOUT
	MVI A, 067H ; g
	CALL DTAOUT
	MVI A, 06FH ; o
	CALL DTAOUT
	MVI A, 074H ; t
	CALL DTAOUT
	MVI A, 020H ; space
	CALL DTAOUT
	MVI A, 06BH ; k
	CALL DTAOUT
	MVI A, 065H ; e
	CALL DTAOUT
	MVI A, 079H ; y
	CALL DTAOUT
	
MASPRESS: CALL KYBORD
	CPI 001H
	JZ DISPLAY
	CPI 002H
	JZ FORGOT
	JMP MASPRESS

FORGOT:	MVI A, 001H
	CALL CMDOUT
	MVI A, 082H
	CALL CMDOUT
	MVI A, 050H; "DISPLAY PUSH BUTTON"
	CALL DTAOUT
	MVI A, 075H; u
	CALL DTAOUT
	MVI A, 073H; s
	CALL DTAOUT
	MVI A, 068H; h
	CALL DTAOUT
	MVI A, 020H; SPACE
	CALL DTAOUT
	MVI A, 042H; B
	CALL DTAOUT
	MVI A, 075H; u
	CALL DTAOUT
	MVI A, 074H; t
	CALL DTAOUT
	MVI A, 074H; t
	CALL DTAOUT
	MVI A, 06FH; o
	CALL DTAOUT
	MVI A, 06EH; n
	CALL DTAOUT
	CALL BUTTONCHK
	CALL ONESEC
	MVI A, 001H
	CALL CMDOUT
	MVI A, 80H
	CALL CMDOUT
        	MVI A, 04EH ; N - "DISPLAY NEW PASSWORD"
        	CALL DTAOUT
        	MVI A, 065H ; e
        	CALL DTAOUT
        	MVI A, 077H ; w
        	CALL DTAOUT
        	MVI A, 020H ; space
        	CALL DTAOUT
        	MVI A, 050H ; P
	CALL DTAOUT
	MVI A, 061H ; a
	CALL DTAOUT
	MVI A, 073H ; s
	CALL DTAOUT
	MVI A, 073H ; s
	CALL DTAOUT
	MVI A, 077H ; w
	CALL DTAOUT
	MVI A, 06FH ; o
	CALL DTAOUT
	MVI A, 072H ; r
	CALL DTAOUT
	MVI A, 064H ; d
	CALL DTAOUT
	MVI A, 03AH ; :
	CALL DTAOUT
	MVI A, 0C6H ; SETTING DDRAM ADDRESS TO SECOND LINE
	CALL CMDOUT
	CALL FRGTPW
	LXI H, 08010H
	MOV A, M
	ADI 030H
	CALL DTAOUT
	INX H
	MOV A, M
	ADI 030H
	CALL DTAOUT
	INX H
	MOV A, M
	ADI 030H
	CALL DTAOUT
	INX H
	MOV A, M
	ADI 030H
	CALL DTAOUT
	CALL ONESEC; 5 SEC DELAY
	CALL ONESEC
	CALL ONESEC
	CALL ONESEC
	CALL ONESEC
	CALL ONESEC
	MVI A, 001H
	CALL CMDOUT
	JMP DISPLAY

DISPLAY: MVI A, 001H
	CALL CMDOUT
	MVI A, 080H; A AS OUPUT
	OUT 003H
	MVI A, 00H
	OUT 000H; BUZZER OFF
	MVI A, 080H  ; Setting DDRAM to address 80h that is first line 
	CALL CMDOUT
	MVI A, 045H  ; Writing "Enter password: "
	CALL DTAOUT
	MVI A, 06EH ; n
	 CALL DTAOUT
	MVI A, 074H ; t
	CALL DTAOUT
	MVI A, 065H ; e
	CALL DTAOUT
	MVI A, 072H ; r
	CALL DTAOUT
	MVI A, 020H ; space
	CALL DTAOUT
	MVI A, 050H ; p
	CALL DTAOUT
	MVI A, 061H ; a
	CALL DTAOUT
	MVI A, 073H ; s
	CALL DTAOUT
	MVI A, 073H ; s
	CALL DTAOUT
	MVI A, 077H ; w
	CALL DTAOUT
	MVI A, 06FH ; o
	CALL DTAOUT
	MVI A, 072H ; r
	CALL DTAOUT
	MVI A, 064H ; d
	CALL DTAOUT
	MVI A, 03AH ; :
	CALL DTAOUT
	MVI A, 0C6H
	CALL CMDOUT

	MVI D, 003H ; 3 TRIES
COMPARE:	LXI H, 08010H ; POINT TO MEMORY LOCATION IN ROM
	MVI C, 004H ; COUNT FOR NUMBER OF DIGITS IN PASSWORD
	MVI B, 000H ; FLAG
LOOP1:  	CALL KYBORD
	PUSH PSW
	PUSH B
	CALL NUMTOLCD
	CALL DTAOUT
	POP B
	POP PSW
	CMP M
	JZ THIS
	INR B
THIS: INX H
	DCR C
	JNZ LOOP1
	CALL ONESEC
	MOV A, B ; VALUE OF FLAG
	CPI 000H
	JZ CHOOSE
	MVI A, 0C6H
	CALL CMDOUT
	MVI A, 020H ; space
	CALL DTAOUT
	MVI A, 020H ; space
	CALL DTAOUT
	MVI A, 020H ; space
	CALL DTAOUT
	MVI A, 020H ; space
	CALL DTAOUT
	MVI A, 0C6H
	CALL CMDOUT
	DCR D
	JNZ COMPARE
INCORRECT:	MVI A, 001H; CLEAR DISPLAY
	CALL CMDOUT
	MVI A,082H
	CALL CMDOUT
	MVI A, 055H ; I - DISPLAY "Unauthorised Access!!"
        	CALL DTAOUT
        	MVI A, 06EH ; n
       	CALL DTAOUT
        	MVI A, 061H ; a
        	CALL DTAOUT
        	MVI A, 075H ; u
        	CALL DTAOUT
        	MVI A, 074H ; t
        	CALL DTAOUT
        	MVI A, 068H ; h
        	CALL DTAOUT
        	MVI A, 06FH ; o
        	CALL DTAOUT
        	MVI A, 072H ; r
        	CALL DTAOUT
        	MVI A, 069H ; i
        	CALL DTAOUT
	MVI A, 073H ; s
        	CALL DTAOUT
	MVI A, 065H ; e
        	CALL DTAOUT
	MVI A, 064H ; d
        	CALL DTAOUT
	MVI A, 0C4H; 4TH BLOCK LCD 2ND ROW
	CALL CMDOUT
	MVI A, 041H ; A
        	CALL DTAOUT
	MVI A, 063H ; c
        	CALL DTAOUT
	MVI A, 063H ; c
        	CALL DTAOUT
	MVI A, 065H ; e
        	CALL DTAOUT
	MVI A, 073H ; s
        	CALL DTAOUT
	MVI A, 073H ; s
        	CALL DTAOUT
        	MVI A, 021H ; !
        CALL DTAOUT
	MVI A, 021H ; !
        CALL DTAOUT
	CALL ONESEC; ONE SEC DELAY
	CALL ONESEC
	MVI A, 001H; CLEAR DISPLAY
	CALL CMDOUT
	CALL ONESEC
	MVI A, 080H; A AS OUPUT
	OUT 003H
	MVI A, 001H
	OUT 000H; PORT A, BUZZER ON
	JMP MASTER
	
CHOOSE:	MVI A, 000000001B ; CLEAR DISPLAY
	CALL CMDOUT
	MVI A, 000000110B ; ENTRY MODE SET, SHIFT AND INCREMENT REGISTER
	CALL CMDOUT
	MVI A, 000001100B ; DISPLAY ON CURSOR
        	CALL CMDOUT
	MVI A, 080H ; SETTING DDRAM ADDRESS TO FIRST LINE
	CALL CMDOUT
	MVI A, 031H ; DISPLAY "1 - Open door"
	CALL DTAOUT
	MVI A, 020H ; space
	CALL DTAOUT
	MVI A, 02DH ; - 
	CALL DTAOUT
	MVI A, 020H ; space
	CALL DTAOUT
	MVI A, 04FH ; O
	CALL DTAOUT
	MVI A, 070H ; p
	CALL DTAOUT
	MVI A, 065H ; e
	CALL DTAOUT
	MVI A, 06EH ; n
	CALL DTAOUT
	MVI A, 020H ; space
	CALL DTAOUT
	MVI A, 064H ; d
	CALL DTAOUT
	MVI A, 06FH ; o
	CALL DTAOUT
	MVI A, 06FH ; o
	CALL DTAOUT
	MVI A, 072H ; r
	CALL DTAOUT
	MVI A, 0C0H ; SETTING DDRAM ADDRESS TO SECOND LINE
	CALL CMDOUT
	MVI A, 032H ; 2
	CALL DTAOUT
	MVI A, 020H ; space
	CALL DTAOUT
	MVI A, 02DH ; - 
	CALL DTAOUT
	MVI A, 020H ; space
	CALL DTAOUT
	MVI A, 043H ; C
	CALL DTAOUT	
	MVI A, 068H ; h
	CALL DTAOUT
	MVI A, 061H ; a
	CALL DTAOUT
	MVI A, 06EH ; n
	CALL DTAOUT
	MVI A, 067H ; g
	CALL DTAOUT
	MVI A, 065H ; e
	CALL DTAOUT
	MVI A, 020H ; space
	CALL DTAOUT
	MVI A, 06BH ; k
	CALL DTAOUT
	MVI A, 065H ; e
	CALL DTAOUT
	MVI A, 079H ; y
	CALL DTAOUT
	
PRESS:	CALL KYBORD
	CPI 001H
	JZ MOTOR
	CPI 002H
	JZ CHANGE
	JMP PRESS

MOTOR: CALL ONESEC 
	MVI A, 000000001B ; CLEAR DISPLAY
	CALL CMDOUT
	MVI A, 081H ; INITIALIZE DDRAM ADDRESS TO 2ND OF FIRST LINE 
	CALL CMDOUT
	MVI A, 041H ; DISPLAY "Access Granted!" 
        	CALL DTAOUT
	MVI A, 063H ; c
        	CALL DTAOUT
	MVI A, 063H ; c
        	CALL DTAOUT
	MVI A, 065H ; e
        	CALL DTAOUT
	MVI A, 073H ; s
        	CALL DTAOUT
	MVI A, 073H ; s
        	CALL DTAOUT
	MVI A, 020H; SPACE
	CALL DTAOUT
        	MVI A, 047H ; G
        	CALL DTAOUT
        	MVI A, 072H ; r
        	CALL DTAOUT
        	MVI A, 061H ; a
        	CALL DTAOUT
        	MVI A, 06EH ; n
        	CALL DTAOUT
        	MVI A, 074H ; t
        	CALL DTAOUT
        	MVI A, 065H ; e
        	CALL DTAOUT
        	MVI A, 064H ; d
        	CALL DTAOUT
	MVI A, 080H; A AS OUTPUT PORT
	OUT 003H; TO CONTROL WORD
	MVI A, 010H; CODE FOR CLOCKWISE ROT
	OUT 000H; TO PORT A
	CALL ONESEC; 3 SECONDS TO ROTATE
	CALL ONESEC
	CALL ONESEC
	MVI A, 000H; STOP ROTATION
	OUT 000H
	CALL BUTTONCHK
	MVI A, 080H; A AS OUTPUT PORT
	OUT 003H; TO CONTROL WORD
	MVI A, 020H; CODE FOR ANTICLOCKWISE ROT
	OUT 000H; TO PORT A
	CALL ONESEC; 3 SECONDS TO ROTATE
	CALL ONESEC
	CALL ONESEC
	MVI A, 000H; STOP ROTATION
	OUT 000H
	MVI A, 001H; CLEAR DISPLAY
	CALL CMDOUT
	JMP DISPLAY
	
CHANGE: 	MVI A, 000000001B ; CLEAR DISPLAY
	CALL CMDOUT
	MVI A, 000000110B ; ENTRY MODE SET, SHIFT AND INCREMENT REGISTER
	CALL CMDOUT
	MVI A, 000001100B ; DISPLAY ON CURSOR
        	CALL CMDOUT
	MVI A, 080H
	CALL CMDOUT
        	MVI A, 04EH ; N - "DISPLAY NEW PASSWORD"
        	CALL DTAOUT
        	MVI A, 065H ; e
        	CALL DTAOUT
        	MVI A, 077H ; w
        	CALL DTAOUT
        	MVI A, 020H ; space
        	CALL DTAOUT
        	MVI A, 050H ; P
	CALL DTAOUT
	MVI A, 061H ; a
	CALL DTAOUT
	MVI A, 073H ; s
	CALL DTAOUT
	MVI A, 073H ; s
	CALL DTAOUT
	MVI A, 077H ; w
	CALL DTAOUT
	MVI A, 06FH ; o
	CALL DTAOUT
	MVI A, 072H ; r
	CALL DTAOUT
	MVI A, 064H ; d
	CALL DTAOUT
	MVI A, 03AH ; :
	CALL DTAOUT
	MVI A, 0C6H ; SETTING DDRAM ADDRESS TO SECOND LINE
	CALL CMDOUT

	MVI D, 004H
	LXI B, 08010H
NEWPASS: 	CALL KYBORD
	PUSH PSW
	PUSH B
	CALL NUMTOLCD
	CALL DTAOUT
	POP B
	POP PSW
	STAX B
	INX B
	DCR D
	JNZ NEWPASS
	CALL ONESEC
	MVI A, 000000001B ; CLEAR DISPLAY
	CALL CMDOUT
	CALL ONESEC
	MVI A, 080H; FIRST LINE LCD
	CALL CMDOUT
	MVI A, 050H ; P
	CALL DTAOUT
	MVI A, 061H ; a
	CALL DTAOUT
	MVI A, 073H ; s
	CALL DTAOUT
	MVI A, 073H ; s
	CALL DTAOUT
	MVI A, 077H ; w
	CALL DTAOUT
	MVI A, 06FH ; o
	CALL DTAOUT
	MVI A, 072H ; r
	CALL DTAOUT
	MVI A, 064H ; d
	CALL DTAOUT
	MVI A, 020H; SPACE
	CALL DTAOUT
	MVI A, 043H ; C
	CALL DTAOUT	
	MVI A, 068H ; h
	CALL DTAOUT
	MVI A, 061H ; a
	CALL DTAOUT
	MVI A, 06EH ; n
	CALL DTAOUT
	MVI A, 067H ; g
	CALL DTAOUT
	MVI A, 065H ; e
	CALL DTAOUT
	MVI A, 064H; d
	CALL DTAOUT
	CALL ONESEC
	CALL ONESEC
	MVI A, 001H; CLEAR DISPLAY
	CALL CMDOUT	
	JMP DISPLAY

CMDOUT: 	MOV B,A
        	CALL CHKDB7
OUTPUT: 	MVI A, 000000010B ; Select PC1=RS=0
        	OUT 000H
        	MOV A,B
        	OUT 001H
        	MVI A, 000000000B ;Set EN Low
        	OUT 000H
        	RET
DTAOUT: 	MOV B,A
        	CALL CHKDB7
        	MVI A, 006H;RS=1, EANBLE WRITE, E=1 
        	OUT 000H
        	MOV A,B
        	OUT 001H
        	MVI A, 000000000B ;Set EN Low
        	OUT 000H
        	RET
CHKDB7: 	MVI A, 010000010B ;Set up Port B as Input, 00H OUTPUT
        	OUT 003H
        
READ:   	MVI A, 000001010B ;Set EN High, RS=0,RW=1
        	OUT 000H
        	IN 001H         ;Read 01H and CHk DB7
        	RLC
        	MVI A, 000001000B ;Set EN Low
        	OUT 000H
        	JC READ          ; If DB7=1 jump and read again
        	MVI A, 010000000B  ;Set up B again as ouput
	OUT 003H
	RET

DELAY: PUSH B
	PUSH PSW
	LXI B, 002CBH ; Load 10ms delay count
LOOP:  	DCX B
	MOV A,C
	ORA B
	JNZ LOOP
	POP PSW
	POP B
	RET
ONESEC: PUSH B
	PUSH PSW
	LXI B, 0FFFFH ; Load almost 1 sec delay count(CONFIRM THIS)
LOOPSEC:  DCX B
	MOV A,C
	ORA B
	JNZ LOOPSEC
	POP PSW
	POP B
	RET


KYBORD: PUSH B
	PUSH D
	MVI A, 010000001B ; SET CU AS OUTPUT (COLUMNS) AND CL AS INPUT (ROWS)
	OUT 003H
	XRA A ; CLEAR ACC
	MVI E, 001H
	OUT 002H; GROUNDING COLUMNS

KEYREL: 	IN 002H ; INPUT FROM ROWS
	ANI 00FH ; MASKING OTHER BITS (MSB's)
	CPI 00FH ; KEYRELEASE
	JNZ KEYREL ; WAIT TILL KEY IS RELEASED
	CALL DELAY
	
KEYCHK: 	IN 002H ; INPUT FROM ROWS
	ANI 00FH
	CPI 00FH
	JZ KEYCHK

	CALL DELAY
	
	MVI A, 011110111B ; GROUND EACH COLUMN ONE BY ONE
	MVI B, 003H ; SET COLUMN COUNTER

NXTCOL: 	RLC
	MOV D,A ; SAVE ACC VALUE
	OUT 002H
	IN 002H ; INPUT FROM ROWS
	ANI 00FH ; MASK
	MVI C, 004H ; ROW COUNTER
	
NXTROW: 	RAR
	JNC CODE
	PUSH PSW
	MOV A,E
	ADI 003H
	MOV E, A
	POP PSW
	DCR C
	JNZ NXTROW
	MOV A, E
	SUI 00BH
	MOV E, A
	MOV A,D
	DCR B
	JNZ NXTCOL
	JMP KEYCHK

CODE: 	MOV A,E
	CPI 00BH
	JNZ HERE3
	MVI A, 000H
HERE3:	POP D
	POP B
	RET
	

NUMTOLCD: 	CPI  00AH
          	JNZ HASH
          	MVI A, 02AH
          	RET
HASH: 	CPI 00CH
	JNZ NUM
	MVI A, 023H
	RET
NUM: 	ADI 030H
	RET
	
BUTTONCHK: MVI A, 088H
	OUT 003H
	IN 002H
	ANI 080H
	JZ BUTTONCHK; IF NOT OPEN
	CALL DELAY
	CALL DELAY
BUTTONPUSH:	IN 002H
	ANI 080H
	JNZ BUTTONPUSH; IF NOT CLOSED
	CALL DELAY
	CALL DELAY
	CMA
	ORA A
	JZ BUTTONPUSH; SOME ERROR
	RET

FRGTPW: PUSH B
	PUSH H
	PUSH PSW
	MVI A, 010001000B
	OUT 003H

	LXI B, 00000H
RANDOM:       INX B

BUTTONCHKFRGT: MVI A, 088H
	OUT 003H
	IN 002H
	ANI 080H
	
	JZ BUTTONCHKFRGT
	INX B
	CALL DELAY
	CALL DELAY
	IN 002H
	ANI 080H
	JNZ RANDOM
	CALL DELAY
	CALL DELAY
	CMA
	ORA A
	JZ RANDOM
	
	LXI H, 08010H; MEMORY LOCATION
	MOV A, B
	DAA
	ANI 0F0H
	RRC
	RRC	
	RRC	
	RRC
	MOV M, A
	INX H
	MOV A, B
	DAA
	ANI 00FH
	MOV M, A
	INX H
	MOV A, C
	DAA
	ANI 0F0H
	RRC
	RRC
	RRC	
	RRC
	MOV M, A
	INX H
	MOV A, C
	DAA
	ANI 00FH
	MOV M, A
	POP PSW
	POP H
	POP B
	RET


.ORG 00F00H
.DB 001H
.DB 002H
.DB 003H
.DB 004H
